[{"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\index.js":"1","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\store.js":"2","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\App.js":"3","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\orderReducer.js":"4","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\cartReducer.js":"5","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\postReducer.js":"6","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\productReducer.js":"7","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\premiumReducer.js":"8","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\profileReducer.js":"9","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\userReducer.js":"10","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\Header.js":"11","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\postConstants.js":"12","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\orderConstants.js":"13","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\cartConstants.js":"14","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\productConstants.js":"15","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\userConstants.js":"16","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\premiumConstants.js":"17","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\profileConstants.js":"18","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\Footer.js":"19","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\userActions.js":"20","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\HomeScreen.js":"21","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\ProductCarousel.js":"22","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\Message.js":"23","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\productActions.js":"24","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\RegisterScreen.js":"25","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\LoginScreen.js":"26","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\FormContainer.js":"27","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\products\\ProductsHomeScreen.js":"28","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\Paginate.js":"29","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\Product.js":"30","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\Rating.js":"31","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\products\\ProductItemScreen.js":"32","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\NotFound.js":"33","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\posts\\PostsHomeScreen.js":"34","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\postActions.js":"35","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\posts\\PostForm.js":"36","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\ScrollToTop.js":"37","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\posts\\PostItemScreen.js":"38","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\utils\\formatDate.js":"39","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\posts\\CommentForm.js":"40","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\CommentFormContainer.js":"41","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\profiles\\ProfileForm.js":"42","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\profileActions.js":"43","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\profiles\\ProfileScreen.js":"44","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\users\\UserInfo.js":"45","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\carts\\CartScreen.js":"46","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\cartActions.js":"47","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\orderActions.js":"48","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\orders\\MyOrdersListScreen.js":"49","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\premiums\\PremiumPackagesListScreen.js":"50","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\premiumActions.js":"51","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\AdminOrdersListScreen.js":"52","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\AdminUsersListScreen.js":"53","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\User.js":"54","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\AdminProductsListScreen.js":"55","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\Product.js":"56","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\Order.js":"57","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\OrderPaginate.js":"58","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\AdminCreateUpdateProductScreen.js":"59","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\premiums\\PremiumPackageOrderScreen.js":"60","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\premiums\\PremiumPackage.js":"61","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\orders\\ShippingScreen.js":"62","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\CheckoutSteps.js":"63","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\orders\\PaymentScreen.js":"64","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\orders\\PlaceOrderScreen.js":"65","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\orders\\OrderDetailsScreen.js":"66","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\posts\\Post.js":"67","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\posts\\PostPaginate.js":"68","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\AdminUserEditScreen.js":"69","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\AdminOrderDetailsScreen.js":"70"},{"size":265,"mtime":1610941494251,"results":"71","hashOfConfig":"72"},{"size":5035,"mtime":1612294157672,"results":"73","hashOfConfig":"72"},{"size":6403,"mtime":1612221253186,"results":"74","hashOfConfig":"72"},{"size":3681,"mtime":1612220539039,"results":"75","hashOfConfig":"72"},{"size":1272,"mtime":1612069409095,"results":"76","hashOfConfig":"72"},{"size":9555,"mtime":1612456735128,"results":"77","hashOfConfig":"72"},{"size":3971,"mtime":1611965953820,"results":"78","hashOfConfig":"72"},{"size":3861,"mtime":1611987974842,"results":"79","hashOfConfig":"72"},{"size":3309,"mtime":1611703548110,"results":"80","hashOfConfig":"72"},{"size":4080,"mtime":1612076704998,"results":"81","hashOfConfig":"72"},{"size":6368,"mtime":1611776848751,"results":"82","hashOfConfig":"72"},{"size":3328,"mtime":1612286663827,"results":"83","hashOfConfig":"72"},{"size":1580,"mtime":1611882355837,"results":"84","hashOfConfig":"72"},{"size":244,"mtime":1611104251434,"results":"85","hashOfConfig":"72"},{"size":1718,"mtime":1611104853244,"results":"86","hashOfConfig":"72"},{"size":2691,"mtime":1612076607075,"results":"87","hashOfConfig":"72"},{"size":1199,"mtime":1611777103648,"results":"88","hashOfConfig":"72"},{"size":1420,"mtime":1611683113417,"results":"89","hashOfConfig":"72"},{"size":1977,"mtime":1611268162953,"results":"90","hashOfConfig":"72"},{"size":11118,"mtime":1612076822051,"results":"91","hashOfConfig":"72"},{"size":1135,"mtime":1611773599219,"results":"92","hashOfConfig":"72"},{"size":1298,"mtime":1612072405897,"results":"93","hashOfConfig":"72"},{"size":256,"mtime":1611268577697,"results":"94","hashOfConfig":"72"},{"size":5380,"mtime":1611965685819,"results":"95","hashOfConfig":"72"},{"size":4309,"mtime":1611270779860,"results":"96","hashOfConfig":"72"},{"size":2374,"mtime":1611270828704,"results":"97","hashOfConfig":"72"},{"size":352,"mtime":1611269690731,"results":"98","hashOfConfig":"72"},{"size":1835,"mtime":1611984794638,"results":"99","hashOfConfig":"72"},{"size":836,"mtime":1611875614523,"results":"100","hashOfConfig":"72"},{"size":1196,"mtime":1611788666388,"results":"101","hashOfConfig":"72"},{"size":1802,"mtime":1611268616120,"results":"102","hashOfConfig":"72"},{"size":8560,"mtime":1611968121437,"results":"103","hashOfConfig":"72"},{"size":1230,"mtime":1611774462418,"results":"104","hashOfConfig":"72"},{"size":2426,"mtime":1612074778018,"results":"105","hashOfConfig":"72"},{"size":13082,"mtime":1612456446608,"results":"106","hashOfConfig":"72"},{"size":1974,"mtime":1612240536005,"results":"107","hashOfConfig":"72"},{"size":512,"mtime":1611379758496,"results":"108","hashOfConfig":"72"},{"size":13159,"mtime":1612295288843,"results":"109","hashOfConfig":"72"},{"size":122,"mtime":1611512183941,"results":"110","hashOfConfig":"72"},{"size":1494,"mtime":1611534678561,"results":"111","hashOfConfig":"72"},{"size":360,"mtime":1611532435892,"results":"112","hashOfConfig":"72"},{"size":11124,"mtime":1611853985346,"results":"113","hashOfConfig":"72"},{"size":4453,"mtime":1611725050511,"results":"114","hashOfConfig":"72"},{"size":1964,"mtime":1611853795770,"results":"115","hashOfConfig":"72"},{"size":5024,"mtime":1611853659952,"results":"116","hashOfConfig":"72"},{"size":4616,"mtime":1611772393078,"results":"117","hashOfConfig":"72"},{"size":1346,"mtime":1611769289249,"results":"118","hashOfConfig":"72"},{"size":5697,"mtime":1612220507918,"results":"119","hashOfConfig":"72"},{"size":3660,"mtime":1611775708578,"results":"120","hashOfConfig":"72"},{"size":2183,"mtime":1612209219432,"results":"121","hashOfConfig":"72"},{"size":3966,"mtime":1611853972211,"results":"122","hashOfConfig":"72"},{"size":2613,"mtime":1612221958691,"results":"123","hashOfConfig":"72"},{"size":2013,"mtime":1612222284809,"results":"124","hashOfConfig":"72"},{"size":1938,"mtime":1612222299947,"results":"125","hashOfConfig":"72"},{"size":3471,"mtime":1611985473170,"results":"126","hashOfConfig":"72"},{"size":1423,"mtime":1611984588101,"results":"127","hashOfConfig":"72"},{"size":2465,"mtime":1612222181193,"results":"128","hashOfConfig":"72"},{"size":909,"mtime":1611876911542,"results":"129","hashOfConfig":"72"},{"size":6340,"mtime":1611966262471,"results":"130","hashOfConfig":"72"},{"size":3873,"mtime":1611988358939,"results":"131","hashOfConfig":"72"},{"size":1321,"mtime":1611988204126,"results":"132","hashOfConfig":"72"},{"size":3919,"mtime":1612071122412,"results":"133","hashOfConfig":"72"},{"size":1300,"mtime":1612067536649,"results":"134","hashOfConfig":"72"},{"size":1811,"mtime":1612067667133,"results":"135","hashOfConfig":"72"},{"size":5434,"mtime":1612068279879,"results":"136","hashOfConfig":"72"},{"size":7854,"mtime":1612221169028,"results":"137","hashOfConfig":"72"},{"size":2694,"mtime":1612240780606,"results":"138","hashOfConfig":"72"},{"size":803,"mtime":1612072639545,"results":"139","hashOfConfig":"72"},{"size":4395,"mtime":1612077476625,"results":"140","hashOfConfig":"72"},{"size":7923,"mtime":1612221559033,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"1e953df",{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"144"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"144"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"144"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"144"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"144"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"144"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"144"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"144"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"144"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"144"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"144"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"144"},"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\index.js",[],["295","296"],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\store.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\App.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\orderReducer.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\cartReducer.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\postReducer.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\productReducer.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\premiumReducer.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\profileReducer.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\reducers\\userReducer.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\Header.js",["297"],"import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userData } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Navbar bg='primary' variant='dark' expand='lg' collapseOnSelect>\r\n          <Container>\r\n            <LinkContainer to='/'>\r\n              <Navbar.Brand>It All Vegan Here</Navbar.Brand>\r\n            </LinkContainer>\r\n\r\n            <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n            <Navbar.Collapse id='basic-navbar-nav'>\r\n              <Nav className='ml-auto'>\r\n                <LinkContainer to='/premiums'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-medal'></i> Premium\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n\r\n                <LinkContainer to='/products'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-shopping-bag'></i> Products\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n\r\n                <LinkContainer to='/posts'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-pencil-alt'></i> Posts\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n\r\n                {userData ? (\r\n                  userData.isAdmin ? (\r\n                    <NavDropdown title='Admin' id='adminMenu'>\r\n                      <LinkContainer to='/admin/users'>\r\n                        <NavDropdown.Item>\r\n                          <i className='fas fa-seedling'></i> Manage users\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to='/admin/products'>\r\n                        <NavDropdown.Item>\r\n                          <i className='fas fa-shopping-bag'></i> Manage\r\n                          products\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to='/admin/orders'>\r\n                        <NavDropdown.Item>\r\n                          <i className='fas fa-shipping-fast'></i> Manage orders\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <NavDropdown.Divider />\r\n                      <NavDropdown.Item onClick={logoutHandler}>\r\n                        <i className='fas fa-user-minus'></i> Logout\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : userData.isPremium ? (\r\n                    <NavDropdown\r\n                      title={\r\n                        '* ' +\r\n                        ' ' +\r\n                        userData.firstName +\r\n                        ' ' +\r\n                        userData.lastName +\r\n                        ' *'\r\n                      }\r\n                      id='username'\r\n                    >\r\n                      <LinkContainer to='/userInfo'>\r\n                        <NavDropdown.Item>\r\n                          <i className='fas fa-info-circle'></i> Basic info\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to='/profile'>\r\n                        <NavDropdown.Item>\r\n                          <i className='far fa-id-card'></i> Profile\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <NavDropdown.Item href='/cart'>\r\n                        <i className='fas fa-shopping-cart'></i> My cart\r\n                      </NavDropdown.Item>\r\n\r\n                      <LinkContainer to='/myorders'>\r\n                        <NavDropdown.Item>\r\n                          <i className='fas fa-shipping-fast'></i> My order\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <NavDropdown.Divider />\r\n                      <NavDropdown.Item onClick={logoutHandler}>\r\n                        <i className='fas fa-user-minus'></i> Logout\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : (\r\n                    <NavDropdown\r\n                      title={userData.firstName + ' ' + userData.lastName}\r\n                      id='username'\r\n                    >\r\n                      <LinkContainer to='/userInfo'>\r\n                        <NavDropdown.Item>\r\n                          <i className='fas fa-info-circle'></i> Basic info\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to='/profile'>\r\n                        <NavDropdown.Item>\r\n                          <i className='far fa-id-card'></i> Profile\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to='/cart'>\r\n                        <NavDropdown.Item>\r\n                          <i className='fas fa-shopping-cart'></i> My cart\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to='/myorders'>\r\n                        <NavDropdown.Item>\r\n                          <i className='fas fa-shipping-fast'></i> My order\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <NavDropdown.Divider />\r\n                      <NavDropdown.Item onClick={logoutHandler}>\r\n                        <i className='fas fa-user-minus'></i> Logout\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  )\r\n                ) : (\r\n                  <LinkContainer to='/login'>\r\n                    <Nav.Link>\r\n                      <i className='fas fa-user'></i> Sign in\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n                )}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\postConstants.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\orderConstants.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\cartConstants.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\productConstants.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\userConstants.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\premiumConstants.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\constants\\profileConstants.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\Footer.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\userActions.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\HomeScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\ProductCarousel.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\Message.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\productActions.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\FormContainer.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\products\\ProductsHomeScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\Paginate.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\Product.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\Rating.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\products\\ProductItemScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\NotFound.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\posts\\PostsHomeScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\postActions.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\posts\\PostForm.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\ScrollToTop.js",["298"],"import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// source: https://stackoverflow.com/questions/36904185/react-router-scroll-to-top-on-every-transition\r\n// zurfyx's answer\r\n\r\nconst ScrollToTop = ({ history, children }) => {\r\n  useEffect(() => {\r\n    const scrollToTop = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      scrollToTop();\r\n    };\r\n  }, []);\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\posts\\PostItemScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\utils\\formatDate.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\posts\\CommentForm.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\CommentFormContainer.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\profiles\\ProfileForm.js",["299","300","301","302"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, FormGroup } from 'react-bootstrap';\r\nimport FormContainer from '../../components/FormContainer';\r\nimport Message from '../../components/Message';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getMyProfile,\r\n  createUserProfileItem,\r\n  updateUserProfileItem,\r\n} from '../../actions/profileActions';\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/profileConstants';\r\n\r\nconst ProfileForm = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const createProfile = useSelector(state => state.createProfile);\r\n  const { success: successCreateProfile } = createProfile;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userData } = userLogin;\r\n\r\n  const getUserInfo = useSelector(state => state.getUserInfo);\r\n  const { user } = getUserInfo;\r\n\r\n  const getLoggedInUserProfile = useSelector(\r\n    state => state.getLoggedInUserProfile\r\n  );\r\n  const { profile } = getLoggedInUserProfile;\r\n\r\n  const updateProfile = useSelector(state => state.updateProfile);\r\n  const { success: successUpdateProfile } = updateProfile;\r\n\r\n  const [company, setCompany] = useState('');\r\n  const [website, setWebsite] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [favourites, setFavourites] = useState('');\r\n  const [bio, setBio] = useState('');\r\n  const [twitter, setTwitter] = useState('');\r\n  const [facebook, setFacebook] = useState('');\r\n  const [linkedin, setLinkedin] = useState('');\r\n  const [youtube, setYoutube] = useState('');\r\n  const [instagram, setInstagram] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!userData) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(getMyProfile());\r\n      if (!profile) {\r\n        setMessage(null);\r\n        setCompany('');\r\n        setWebsite('');\r\n        setCity('');\r\n        setState('');\r\n        setStatus('');\r\n        setFavourites('');\r\n        setBio('');\r\n        setTwitter('');\r\n        setFacebook('');\r\n        setLinkedin('');\r\n        setYoutube('');\r\n        setInstagram('');\r\n      } else {\r\n        setMessage(null);\r\n        setCompany(profile.company ? profile.company : '');\r\n        setWebsite(profile.website ? profile.website : '');\r\n        setCity(profile.city ? profile.city : '');\r\n        setState(profile.state ? profile.state : '');\r\n        setStatus(profile.status ? profile.status : '');\r\n        setFavourites(profile.favourites ? profile.favourites : '');\r\n        setBio(profile.bio ? profile.bio : '');\r\n        setTwitter(profile.social.twitter ? profile.social.twitter : '');\r\n        setFacebook(profile.social.facebook ? profile.social.facebook : '');\r\n        setLinkedin(profile.social.linkedin ? profile.social.linkedin : '');\r\n        setYoutube(profile.social.youtube ? profile.social.youtube : '');\r\n        setInstagram(profile.social.instagram ? profile.social.instagram : '');\r\n      }\r\n    } // no dependencies here as it falls into infinite loop\r\n  }, []);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (!status || !company || !city || !state) {\r\n      setMessage('Please fill in all required fields');\r\n      setTimeout(() => {\r\n        setMessage(null);\r\n      }, 4000);\r\n    } else {\r\n      if (!profile) {\r\n        dispatch(\r\n          createUserProfileItem({\r\n            id: user._id,\r\n            company,\r\n            website,\r\n            city,\r\n            state,\r\n            status,\r\n            favourites,\r\n            bio,\r\n            twitter,\r\n            facebook,\r\n            linkedin,\r\n            youtube,\r\n            instagram,\r\n          })\r\n        );\r\n        alert('Successfully created your profile');\r\n      } else {\r\n        dispatch(\r\n          updateUserProfileItem({\r\n            id: user._id,\r\n            company,\r\n            website,\r\n            city,\r\n            state,\r\n            status,\r\n            favourites,\r\n            bio,\r\n            twitter,\r\n            facebook,\r\n            linkedin,\r\n            youtube,\r\n            instagram,\r\n          })\r\n        );\r\n        alert('Successfully updated your profile');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n\r\n      <FormContainer>\r\n        <div>\r\n          <Link className='btn btn-light my-1' to='/'>\r\n            Go Home\r\n          </Link>\r\n        </div>\r\n\r\n        <h1 className='large text-primary'>Create your profile</h1>\r\n        <p className='lead'>\r\n          <i className='fas fa-user'></i> Please let us know who you are\r\n        </p>\r\n        <small>*: Required field</small>\r\n        <Form className='form' onSubmit={e => submitHandler(e)}>\r\n          <FormGroup controlId='status' className='status'>\r\n            <select\r\n              name='status'\r\n              value={status}\r\n              onChange={e => setStatus(e.target.value)}\r\n            >\r\n              <option value='0'>* Select status</option>\r\n              <option value='0 - 1 year'>0 - 1 year</option>\r\n              <option value='2 - 4 years'>2 - 4 years</option>\r\n              <option value='5 - 8 years'>5 - 8 years</option>\r\n              <option value='8+ years'>8+ years</option>\r\n            </select>\r\n            <small className='form-text'>\r\n              * How long have you been going vegan?\r\n            </small>\r\n          </FormGroup>\r\n\r\n          <FormGroup controlId='company' className='company'>\r\n            <input\r\n              type='text'\r\n              placeholder='* Enter company...'\r\n              name='company'\r\n              value={company}\r\n              onChange={e => setCompany(e.target.value)}\r\n            />\r\n            <small className='form-text'>\r\n              * Tell me where you vegan have been hiding at professionally\r\n            </small>\r\n          </FormGroup>\r\n\r\n          <FormGroup controlId='website' className='website'>\r\n            <input\r\n              type='text'\r\n              placeholder='Enter website address...'\r\n              name='website'\r\n              value={website}\r\n              onChange={e => setWebsite(e.target.value)}\r\n            />\r\n            <small className='form-text'>Do you have any website?</small>\r\n          </FormGroup>\r\n\r\n          <FormGroup controlId='city' className='city'>\r\n            <input\r\n              type='text'\r\n              placeholder='* Enter city...'\r\n              name='city'\r\n              value={city}\r\n              onChange={e => setCity(e.target.value)}\r\n            />\r\n            <small className='form-text'>\r\n              * I'll just assume you are located within the US for now...\r\n            </small>\r\n          </FormGroup>\r\n\r\n          <FormGroup controlId='state' className='state'>\r\n            <select\r\n              name='state'\r\n              value={state}\r\n              onChange={e => setState(e.target.value)}\r\n            >\r\n              <option value='0'>* Select state</option>\r\n              <option value='CA'>CA</option>\r\n              <option value='NY'>NY</option>\r\n            </select>\r\n            <small className='form-text'>\r\n              * I'll just assume you are located within the US for now...\r\n            </small>\r\n          </FormGroup>\r\n\r\n          <FormGroup controlId='favourites' className='favourites'>\r\n            <input\r\n              type='text'\r\n              placeholder='Enter your favourite fruits or veggies...'\r\n              name='favourites'\r\n              value={favourites}\r\n              onChange={e => setFavourites(e.target.value)}\r\n            />\r\n            <small className='form-text'>\r\n              Please use comma-separated values (eg. Banana, Blueberry, Kale,\r\n              Cabbage, ...)\r\n            </small>\r\n          </FormGroup>\r\n\r\n          <FormGroup controlId='bio' className='bio'>\r\n            <textarea\r\n              placeholder='A short bio of yourself'\r\n              name='bio'\r\n              value={bio}\r\n              onChange={e => setBio(e.target.value)}\r\n            ></textarea>\r\n            <small className='form-text'>\r\n              A short and simple self-introductory text would be nice. It\r\n              doesn't have to be short, though.\r\n            </small>\r\n          </FormGroup>\r\n\r\n          <div className='my-4'>\r\n            <button\r\n              type='button'\r\n              className='btn btn-light'\r\n              onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            >\r\n              Add Social Network Links\r\n            </button>\r\n            <span>\r\n              <small className='ml-3'> (Optional)</small>\r\n            </span>\r\n          </div>\r\n\r\n          {displaySocialInputs && (\r\n            <>\r\n              <FormGroup controlId='socialInput' className='social-input'>\r\n                <i className='fab fa-twitter fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='Twitter URL'\r\n                  name='twitter'\r\n                  value={twitter}\r\n                  onChange={e => setTwitter(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup className='social-input'>\r\n                <i className='fab fa-facebook fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='Facebook URL'\r\n                  name='facebook'\r\n                  value={facebook}\r\n                  onChange={e => setFacebook(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup className='social-input'>\r\n                <i className='fab fa-youtube fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='YouTube URL'\r\n                  name='youtube'\r\n                  value={youtube}\r\n                  onChange={e => setYoutube(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup className='social-input'>\r\n                <i className='fab fa-linkedin fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='Linkedin URL'\r\n                  name='linkedin'\r\n                  value={linkedin}\r\n                  onChange={e => setLinkedin(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup className='social-input'>\r\n                <i className='fab fa-instagram fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='Instagram URL'\r\n                  name='instagram'\r\n                  value={instagram}\r\n                  onChange={e => setInstagram(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n            </>\r\n          )}\r\n\r\n          <input type='submit' className='btn btn-primary my-2' />\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileForm;\r\n","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\profileActions.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\profiles\\ProfileScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\users\\UserInfo.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\carts\\CartScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\cartActions.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\orderActions.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\orders\\MyOrdersListScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\premiums\\PremiumPackagesListScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\actions\\premiumActions.js",["303"],"import axios from 'axios';\r\nimport {\r\n  GET_PREMIUM_PACKAGES_REQUEST,\r\n  GET_PREMIUM_PACKAGES_SUCCESS,\r\n  GET_PREMIUM_PACKAGES_FAIL,\r\n  GET_PREMIUM_PACKAGE_ITEM_REQUEST,\r\n  GET_PREMIUM_PACKAGE_ITEM_SUCCESS,\r\n  GET_PREMIUM_PACKAGE_ITEM_FAIL,\r\n  CREATE_PREMIUM_PACKAGE_REQUEST,\r\n  CREATE_PREMIUM_PACKAGE_SUCCESS,\r\n  CREATE_PREMIUM_PACKAGE_FAIL,\r\n  UPDATE_PREMIUM_PACKAGE_REQUEST,\r\n  UPDATE_PREMIUM_PACKAGE_SUCCESS,\r\n  UPDATE_PREMIUM_PACKAGE_FAIL,\r\n  DELETE_PREMIUM_PACKAGE_REQUEST,\r\n  DELETE_PREMIUM_PACKAGE_SUCCESS,\r\n  DELETE_PREMIUM_PACKAGE_FAIL,\r\n} from '../constants/premiumConstants';\r\n\r\nexport const getAllPremiumPackageItems = () => async dispatch => {\r\n  try {\r\n    dispatch({ type: GET_PREMIUM_PACKAGES_REQUEST });\r\n\r\n    const res = await axios.get('/api/premiums');\r\n\r\n    dispatch({\r\n      type: GET_PREMIUM_PACKAGES_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_PREMIUM_PACKAGES_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getPremiumPackageItemDetails = premiumId => async dispatch => {\r\n  try {\r\n    dispatch({ type: GET_PREMIUM_PACKAGE_ITEM_REQUEST });\r\n\r\n    const res = await axios.get(`/api/premiums/${premiumId}`);\r\n\r\n    dispatch({\r\n      type: GET_PREMIUM_PACKAGE_ITEM_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_PREMIUM_PACKAGE_ITEM_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createNewPremiumPackage = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CREATE_PREMIUM_PACKAGE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userData },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userData.token}`,\r\n      },\r\n    };\r\n\r\n    const res = await axios.post('/api/premiums', config);\r\n\r\n    dispatch({\r\n      type: CREATE_PREMIUM_PACKAGE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_PREMIUM_PACKAGE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updatePremiumPackageItem = premium => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PREMIUM_PACKAGE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userData },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userData.token}`,\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(\r\n      `/api/premiums/${premium._id}`,\r\n      premium,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_PREMIUM_PACKAGE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PREMIUM_PACKAGE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePremiumPackageItem = premiumId => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({ type: DELETE_PREMIUM_PACKAGE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userData },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userData.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/premiums/${premiumId}`);\r\n\r\n    dispatch({ type: DELETE_PREMIUM_PACKAGE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_PREMIUM_PACKAGE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\AdminOrdersListScreen.js",["304"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Table, Spinner } from 'react-bootstrap';\r\nimport { adminGetAllOrdersList } from '../../actions/orderActions';\r\nimport Message from '../../components/Message';\r\nimport Order from './Order';\r\nimport OrderPaginate from '../../components/OrderPaginate';\r\n\r\nconst AdminOrdersListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userData } = userLogin;\r\n\r\n  const adminGetAllOrders = useSelector(state => state.adminGetAllOrders);\r\n  const { loading, orders, orderPage, orderPages } = adminGetAllOrders;\r\n\r\n  useEffect(() => {\r\n    if (userData && userData.isAdmin) {\r\n      dispatch(adminGetAllOrdersList());\r\n      if (orders && orders.length > 0) {\r\n        setMessage('Successfully fetched orders list');\r\n        setTimeout(() => {\r\n          setMessage(null);\r\n        }, 4000);\r\n      }\r\n    } else {\r\n      setMessage('Only admin users are allowed to make this request');\r\n      setTimeout(() => {\r\n        setMessage(null);\r\n      }, 4000);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Spinner animation='border' variant='primary' />}\r\n      {message && (\r\n        <Message\r\n          variant={\r\n            message === 'Successfully fetched orders list'\r\n              ? 'success'\r\n              : 'danger'\r\n          }\r\n        >\r\n          {message}\r\n        </Message>\r\n      )}\r\n      {orders && orders.length > 0 ? (\r\n        <Table\r\n          striped\r\n          bordered\r\n          hover\r\n          responsive\r\n          className='table-sm text-center'\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <td>ID</td>\r\n              <td>Name</td>\r\n              <td>Address</td>\r\n              <td>Premium?</td>\r\n              <td>Paid?</td>\r\n              <td>Delivered?</td>\r\n              <td></td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {userData &&\r\n              userData.isAdmin &&\r\n              orders &&\r\n              orders.map(order => (\r\n                <tr key={order._id}>\r\n                  <Order order={order} />\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <>\r\n          <Message variant='danger'>No orders found</Message>\r\n          <h1>No orders found</h1>\r\n        </>\r\n      )}\r\n\r\n      <OrderPaginate orderPage={orderPage} orderPages={orderPages} isAdmin />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminOrdersListScreen;\r\n","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\AdminUsersListScreen.js",["305"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Table, Spinner } from 'react-bootstrap';\r\nimport { getUsersList } from '../../actions/userActions';\r\nimport Message from '../../components/Message';\r\nimport User from './User';\r\n\r\nconst AdminUsersListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userData } = userLogin;\r\n\r\n  const usersList = useSelector(state => state.usersList);\r\n  const { loading, users } = usersList;\r\n\r\n  useEffect(() => {\r\n    if (userData && userData.isAdmin) {\r\n      dispatch(getUsersList());\r\n      setMessage('Successfully fetched users list');\r\n      setTimeout(() => {\r\n        setMessage(null);\r\n      }, 4000);\r\n    } else {\r\n      setMessage('Only admin users are allowed to make this request');\r\n      setTimeout(() => {\r\n        setMessage(null);\r\n      }, 4000);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Spinner animation='border' variant='primary' />}\r\n      {message && (\r\n        <Message\r\n          variant={\r\n            message === 'Successfully fetched users list' ? 'success' : 'danger'\r\n          }\r\n        >\r\n          {message}\r\n        </Message>\r\n      )}\r\n      <Table striped bordered hover responsive className='table-sm text-center'>\r\n        <thead>\r\n          <tr>\r\n            <td>Avatar</td>\r\n            <td>Name</td>\r\n            <td>Email</td>\r\n            <td>Member since</td>\r\n            <td>Premium since</td>\r\n            <td>Admin</td>\r\n            <td></td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {userData &&\r\n            userData.isAdmin &&\r\n            users &&\r\n            users.map(user => (\r\n              <tr key={user._id}>\r\n                <User user={user} />\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminUsersListScreen;\r\n","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\User.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\AdminProductsListScreen.js",["306"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Table, Spinner, Row, Col } from 'react-bootstrap';\r\nimport {\r\n  createProductItem,\r\n  getProductsList,\r\n} from '../../actions/productActions';\r\nimport Message from '../../components/Message';\r\nimport Product from './Product';\r\nimport Paginate from '../../components/Paginate';\r\nimport { ADMIN_CREATE_PRODUCT_RESET } from '../../constants/productConstants';\r\n\r\nconst AdminProductssListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userData } = userLogin;\r\n\r\n  const productsList = useSelector(state => state.productsList);\r\n  const { loading, page, pages, products } = productsList;\r\n\r\n  const adminCreateProduct = useSelector(state => state.adminCreateProduct);\r\n  const {\r\n    success: successCreate,\r\n    product: productCreated,\r\n  } = adminCreateProduct;\r\n\r\n  const adminRemoveProduct = useSelector(state => state.adminRemoveProduct);\r\n  const { success: successRemoveProduct } = adminRemoveProduct;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ADMIN_CREATE_PRODUCT_RESET });\r\n\r\n    if (!userData || !userData.isAdmin) {\r\n      history.push('/login');\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/products/${productCreated._id}/create-update`);\r\n    } else if (successRemoveProduct) {\r\n      dispatch(getProductsList('', pageNumber));\r\n    } else {\r\n      dispatch(getProductsList('', pageNumber));\r\n      if (products) {\r\n        setMessage('Successfully fetched products list');\r\n        setTimeout(() => {\r\n          setMessage(null);\r\n        }, 4000);\r\n      }\r\n    } // if I add products as a dependency, this will result in an infinite loop\r\n  }, [\r\n    userData,\r\n    pageNumber,\r\n    history,\r\n    successCreate,\r\n    successRemoveProduct,\r\n    productCreated,\r\n  ]);\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProductItem());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create a product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {loading && <Spinner animation='border' variant='primary' />}\r\n      {message && (\r\n        <Message\r\n          variant={\r\n            message === 'Successfully fetched products list'\r\n              ? 'success'\r\n              : 'danger'\r\n          }\r\n        >\r\n          {message}\r\n        </Message>\r\n      )}\r\n      <Table striped bordered hover responsive className='table-sm text-center'>\r\n        <thead>\r\n          <tr>\r\n            <td>ID</td>\r\n            <td>Name</td>\r\n            <td>Image</td>\r\n            <td>Category</td>\r\n            <td>Brand</td>\r\n            <td>Price</td>\r\n            <td></td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {userData &&\r\n            userData.isAdmin &&\r\n            products &&\r\n            products.map(product => (\r\n              <tr key={product._id}>\r\n                <Product product={product} />\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      <Paginate pages={pages} page={page} isAdmin />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminProductssListScreen;\r\n","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\Product.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\Order.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\OrderPaginate.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\AdminCreateUpdateProductScreen.js",["307","308","309"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Spinner } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport FormContainer from '../../components/FormContainer';\r\nimport {\r\n  createProductItem,\r\n  updateProductItem,\r\n  getProductItemDetails,\r\n} from '../../actions/productActions';\r\nimport { ADMIN_UPDATE_PRODUCT_RESET } from '../../constants/productConstants';\r\n\r\nconst AdminUpdateProductScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState(0.0);\r\n  const [brand, setBrand] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getProductItem = useSelector(state => state.getProductItem);\r\n  const { product } = getProductItem;\r\n\r\n  const adminUpdateProduct = useSelector(state => state.adminUpdateProduct);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = adminUpdateProduct;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: ADMIN_UPDATE_PRODUCT_RESET });\r\n      history.push('/admin/products');\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        // updating a product\r\n        dispatch(getProductItemDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setBrand(product.brand);\r\n        setImage(product.image);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [successUpdate, dispatch, history, product, productId]);\r\n\r\n  const uploadImageHandler = async e => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const res = await axios.post('/api/upload', formData, config);\r\n\r\n      setImage(res.data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const createUpdateHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProductItem({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        description,\r\n        countInStock,\r\n        brand,\r\n        category,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        {loadingUpdate && <Spinner animation='border' variant='primary' />}\r\n        {errorUpdate && (\r\n          <Message variant='danger'>\r\n            An error occurred while loading the product\r\n          </Message>\r\n        )}\r\n        {message && <Message variant='success'>{message}</Message>}\r\n\r\n        {product && (\r\n          <Form onSubmit={createUpdateHandler}>\r\n            <Form.Group controlId='firstName'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter product name'\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={e => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image URL'\r\n                value={image}\r\n                onChange={e => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose file...'\r\n                custom\r\n                onChange={uploadImageHandler}\r\n              ></Form.File>\r\n              {uploading && <Spinner animation='border' variant='primary' />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={e => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={e => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count in stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter count in stock'\r\n                value={countInStock}\r\n                onChange={e => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={e => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary' className='my-1'>\r\n              Create / Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminUpdateProductScreen;\r\n","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\premiums\\PremiumPackageOrderScreen.js",["310","311","312","313","314"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Card, Button, ListGroup, Image } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport { getPremiumPackageItemDetails } from '../../actions/premiumActions';\r\nimport { updateUserToPremium } from '../../actions/userActions';\r\n\r\nconst PremiumPackageOrderScreen = ({ match, history }) => {\r\n  const premiumId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getPremiumPackageItem = useSelector(\r\n    state => state.getPremiumPackageItem\r\n  );\r\n  const { loading, error, premiumPackage } = getPremiumPackageItem;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userData } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      dispatch(getPremiumPackageItemDetails(premiumId));\r\n    }\r\n  }, []);\r\n\r\n  const activatePremiumHandler = () => {\r\n    if (window.confirm('Are you sure you want to activate premium status?')) {\r\n      dispatch(updateUserToPremium());\r\n    }\r\n    window.alert('Congratulations! Enjoy your premium status!');\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {premiumPackage && (\r\n        <Row>\r\n          <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>User info</h2>\r\n                <p>\r\n                  <strong>Name: </strong>\r\n                  {userData.firstName + ' ' + userData.lastName}\r\n                </p>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h2>Payment method: </h2>\r\n                <p>Just click Activate button on the right side</p>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h2>Selected premium package: </h2>\r\n                <p>\r\n                  <strong>Package name: </strong>\r\n                  {premiumPackage.name}\r\n                </p>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <p>\r\n                  <strong>Package image: </strong>\r\n                </p>\r\n                <Image\r\n                  src={premiumPackage.image}\r\n                  className='premium-package-order-image'\r\n                />\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <p>\r\n                  <strong>Price: </strong>$ {premiumPackage.price}\r\n                </p>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <p>\r\n                  <strong>Description: </strong>\r\n                  {premiumPackage.description}\r\n                </p>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h2>Order summary</h2>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Package:</Col>\r\n                    <Col>$ {premiumPackage.price}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Total</Col>\r\n                    <Col>$ {premiumPackage.price}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    type='button'\r\n                    className='btn-primary btn-block'\r\n                    onClick={activatePremiumHandler}\r\n                  >\r\n                    Activate\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PremiumPackageOrderScreen;\r\n","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\premiums\\PremiumPackage.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\orders\\ShippingScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\orders\\PaymentScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\orders\\PlaceOrderScreen.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\orders\\OrderDetailsScreen.js",["315","316"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Spinner,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport { getOrderDetails, payForOrder } from '../../actions/orderActions';\r\nimport {\r\n  ORDER_TO_PAID_RESET,\r\n  ADMIN_OUT_FOR_DELIVERY_RESET,\r\n} from '../../constants/orderConstants';\r\n\r\nconst OrderDetailsScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userData } = userLogin;\r\n\r\n  const orderDetails = useSelector(state => state.orderDetails);\r\n  const { order } = orderDetails;\r\n\r\n  const orderToPaid = useSelector(state => state.orderToPaid);\r\n  const { loading: loadingPay, success: successPay } = orderToPaid;\r\n\r\n  const addDecimals = num => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userData) {\r\n      history.push('/login');\r\n    }\r\n    // PayPal\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || order._id !== orderId || successPay) {\r\n      dispatch({ type: ORDER_TO_PAID_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay, history, userData]);\r\n\r\n  const successPaymentHandler = paymentResult => {\r\n    console.log(paymentResult);\r\n    dispatch(payForOrder(orderId, paymentResult));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {order ? (\r\n        <>\r\n          <h1>Order #{order._id}</h1>\r\n          <Row>\r\n            <Col md={8}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h2>Shipping</h2>\r\n                  <p>\r\n                    <strong>Name: </strong>{' '}\r\n                    {order.user.firstName && order.user.firstName}{' '}\r\n                    {order.user.lastName && order.user.lastName}\r\n                  </p>\r\n                  <strong>Email: </strong>\r\n                  <a href={`mailto:${order.user.email && order.user.email}`}>\r\n                    {order.user.email && order.user.email}\r\n                  </a>\r\n                  <p>\r\n                    <strong>Address: </strong>\r\n                    {order.shippingAddress.address1}{' '}\r\n                    {order.shippingAddress.address2 &&\r\n                      order.shippingAddress.address2 + ', '}\r\n                    {order.shippingAddress.city},{' '}\r\n                    {order.shippingAddress.zipCode},{' '}\r\n                    {order.shippingAddress.state}{' '}\r\n                    {order.shippingAddress.country}\r\n                  </p>\r\n                  {order.isDelivered ? (\r\n                    <Message variant='success'>\r\n                      Delivered on {order.deliveredAt.substring(0, 10)}\r\n                    </Message>\r\n                  ) : (\r\n                    <Message variant='danger'>Not delivered</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Payment method</h2>\r\n                  <p>\r\n                    <strong>Method: </strong>\r\n                    {order.paymentMethod}\r\n                  </p>\r\n                  {order.isPaid ? (\r\n                    <Message variant='success'>\r\n                      Paid on {order.paidAt.substring(0, 10)}\r\n                    </Message>\r\n                  ) : (\r\n                    <Message variant='danger'>Not paid</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Items in cart</h2>\r\n                  {order.orderItems.length === 0 ? (\r\n                    <Message>You have no order.</Message>\r\n                  ) : (\r\n                    <ListGroup variant='flush'>\r\n                      {order.orderItems.map((orderItem, index) => (\r\n                        <ListGroup.Item key={index}>\r\n                          <Row>\r\n                            <Col md={1}>\r\n                              <Image\r\n                                src={orderItem.image}\r\n                                alt={orderItem.name}\r\n                                fluid\r\n                                rounded\r\n                              />\r\n                            </Col>\r\n\r\n                            <Col>\r\n                              <Link to={`/products/${orderItem.product}`}>\r\n                                {orderItem.name}\r\n                              </Link>\r\n                            </Col>\r\n\r\n                            <Col md={4}>\r\n                              {orderItem.qty} x $ {addDecimals(orderItem.price)}{' '}\r\n                              = $ {orderItem.qty * addDecimals(orderItem.price)}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <h2>Order summary</h2>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Items</Col>\r\n                      <Col>$ {addDecimals(order.itemsPrice)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Shipping</Col>\r\n                      <Col>$ {addDecimals(order.shippingPrice)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Tax</Col>\r\n                      <Col>$ {addDecimals(order.taxPrice)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Total</Col>\r\n                      <Col>$ {addDecimals(order.totalPrice)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {!order.isPaid && (\r\n                    <ListGroup.Item>\r\n                      {loadingPay && (\r\n                        <Spinner animation='border' variant='primary' />\r\n                      )}\r\n                      {!sdkReady ? (\r\n                        <Spinner animation='border' variant='primary' />\r\n                      ) : (\r\n                        <PayPalButton\r\n                          amount={order.totalPrice}\r\n                          onSuccess={successPaymentHandler}\r\n                        />\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  )}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        <Message>An error occurred while loading the order</Message>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderDetailsScreen;\r\n","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\posts\\Post.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\posts\\PostPaginate.js",[],"C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\AdminUserEditScreen.js",["317"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Spinner } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport FormContainer from '../../components/FormContainer';\r\nimport {\r\n  adminGetUserInfoById,\r\n  adminUpdateUserInfo,\r\n} from '../../actions/userActions';\r\nimport { ADMIN_UPDATE_USER_RESET } from '../../constants/userConstants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [isPremium, setIsPremium] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const adminGetUserInfo = useSelector(state => state.adminGetUserInfo);\r\n  const { loading, error, user } = adminGetUserInfo;\r\n\r\n  const adminUpdateUser = useSelector(state => state.adminUpdateUser);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = adminUpdateUser;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: ADMIN_UPDATE_USER_RESET });\r\n      history.push('/admin/users');\r\n    } else {\r\n      if (!user.firstName || !user.lastName || user._id !== userId) {\r\n        dispatch(adminGetUserInfoById(userId));\r\n      } else {\r\n        setFirstName(user.firstName);\r\n        setLastName(user.lastName);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n        setIsPremium(user.isPremium);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      adminUpdateUserInfo({\r\n        _id: userId,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        isAdmin,\r\n        isPremium,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/users' className='btn btn-light my-3'>\r\n        Go back\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit user</h1>\r\n        {loadingUpdate && <Spinner animation='border' variant='primary' />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Spinner animation='border' variant='primary' />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='firstName'>\r\n              <Form.Label>First name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder=\"Edit user's first name\"\r\n                value={firstName}\r\n                onChange={e => setFirstName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='lastName'>\r\n              <Form.Label>Last name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder=\"Edit user's last name\"\r\n                value={lastName}\r\n                onChange={e => setLastName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder=\"Edit user's email address\"\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Admin user?'\r\n                value={isAdmin}\r\n                onChange={e => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='ispremium'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Activate premium status for this user?'\r\n                value={isPremium}\r\n                onChange={e => setIsPremium(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","C:\\Users\\Holme\\Desktop\\Developer_Resume\\FullStack_portfolio\\practice\\itallveganhere\\front\\src\\screens\\admin\\AdminOrderDetailsScreen.js",["318","319","320"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Spinner,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport {\r\n  getOrderDetails,\r\n  payForOrder,\r\n  deliverOrder,\r\n} from '../../actions/orderActions';\r\nimport {\r\n  ORDER_TO_PAID_RESET,\r\n  ADMIN_OUT_FOR_DELIVERY_RESET,\r\n} from '../../constants/orderConstants';\r\n\r\nconst AdminOrderDetailsScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userData } = userLogin;\r\n\r\n  const orderDetails = useSelector(state => state.orderDetails);\r\n  const { order } = orderDetails;\r\n\r\n  const adminSetOrderOutForDelivery = useSelector(\r\n    state => state.adminSetOrderOutForDelivery\r\n  );\r\n  const {\r\n    loading: loadingDelivery,\r\n    success: successDelivery,\r\n  } = adminSetOrderOutForDelivery;\r\n\r\n  const addDecimals = num => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userData || !userData.isAdmin) {\r\n      history.push('/login');\r\n    }\r\n\r\n    if (!order || order._id !== orderId || successDelivery) {\r\n      dispatch({ type: ORDER_TO_PAID_RESET });\r\n      dispatch({ type: ADMIN_OUT_FOR_DELIVERY_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    }\r\n  }, [dispatch, order, orderId, successDelivery, history, userData]);\r\n\r\n  const payOrderHandler = () => {\r\n    dispatch(payForOrder());\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {order ? (\r\n        <>\r\n          <h1>Order #{order._id}</h1>\r\n          <Row>\r\n            <Col md={8}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h2>Shipping</h2>\r\n                  <p>\r\n                    <strong>Name: </strong>{' '}\r\n                    {order.user.firstName && order.user.firstName}{' '}\r\n                    {order.user.lastName && order.user.lastName}\r\n                  </p>\r\n                  <strong>Email: </strong>\r\n                  <a href={`mailto:${order.user.email && order.user.email}`}>\r\n                    {order.user.email && order.user.email}\r\n                  </a>\r\n                  <p>\r\n                    <strong>Address: </strong>\r\n                    {order.shippingAddress.address1}{' '}\r\n                    {order.shippingAddress.address2 &&\r\n                      order.shippingAddress.address2 + ', '}\r\n                    {order.shippingAddress.city},{' '}\r\n                    {order.shippingAddress.zipCode},{' '}\r\n                    {order.shippingAddress.state}{' '}\r\n                    {order.shippingAddress.country}\r\n                  </p>\r\n                  {order.isDelivered ? (\r\n                    <Message variant='success'>\r\n                      Delivered on {order.deliveredAt.substring(0, 10)}\r\n                    </Message>\r\n                  ) : (\r\n                    <Message variant='danger'>Not delivered</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Payment method</h2>\r\n                  <p>\r\n                    <strong>Method: </strong>\r\n                    {order.paymentMethod}\r\n                  </p>\r\n                  {order.isPaid ? (\r\n                    <Message variant='success'>\r\n                      Paid on {order.paidAt.substring(0, 10)}\r\n                    </Message>\r\n                  ) : (\r\n                    <Message variant='danger'>Not paid</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Items in cart</h2>\r\n                  {order.orderItems.length === 0 ? (\r\n                    <Message>You have no order.</Message>\r\n                  ) : (\r\n                    <ListGroup variant='flush'>\r\n                      {order.orderItems.map((orderItem, index) => (\r\n                        <ListGroup.Item key={index}>\r\n                          <Row>\r\n                            <Col md={1}>\r\n                              <Image\r\n                                src={orderItem.image}\r\n                                alt={orderItem.name}\r\n                                fluid\r\n                                rounded\r\n                              />\r\n                            </Col>\r\n\r\n                            <Col>\r\n                              <Link to={`/products/${orderItem.product}`}>\r\n                                {orderItem.name}\r\n                              </Link>\r\n                            </Col>\r\n\r\n                            <Col md={4}>\r\n                              {orderItem.qty} x $ {addDecimals(orderItem.price)}{' '}\r\n                              = $ {orderItem.qty * addDecimals(orderItem.price)}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <h2>Order summary</h2>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Items</Col>\r\n                      <Col>$ {addDecimals(order.itemsPrice)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Shipping</Col>\r\n                      <Col>$ {addDecimals(order.shippingPrice)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Tax</Col>\r\n                      <Col>$ {addDecimals(order.taxPrice)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Total</Col>\r\n                      <Col>$ {addDecimals(order.totalPrice)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {loadingDelivery && (\r\n                    <Spinner animation='border' variant='primary' />\r\n                  )}\r\n\r\n                  {userData && userData.isAdmin && !order.isPaid && (\r\n                    <ListGroup.Item>\r\n                      <Button\r\n                        type='button'\r\n                        className='btn btn-block btn-info'\r\n                        onClick={payOrderHandler}\r\n                      >\r\n                        <i className='fas fa-wallet'></i> Mark as paid\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  {userData && userData.isAdmin && !order.isDelivered && (\r\n                    <ListGroup.Item>\r\n                      <Button\r\n                        type='button'\r\n                        className='btn btn-block'\r\n                        onClick={deliverHandler}\r\n                      >\r\n                        <i className='fas fa-truck'></i> Mark as out for\r\n                        delivery\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        <Message>An error occurred while loading the order</Message>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminOrderDetailsScreen;\r\n",{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":2,"column":10,"nodeType":"327","messageId":"328","endLine":2,"endColumn":15},{"ruleId":"329","severity":1,"message":"330","line":15,"column":6,"nodeType":"331","endLine":15,"endColumn":8,"suggestions":"332"},{"ruleId":"325","severity":1,"message":"333","line":12,"column":10,"nodeType":"327","messageId":"328","endLine":12,"endColumn":30},{"ruleId":"325","severity":1,"message":"334","line":20,"column":20,"nodeType":"327","messageId":"328","endLine":20,"endColumn":40},{"ruleId":"325","severity":1,"message":"335","line":34,"column":20,"nodeType":"327","messageId":"328","endLine":34,"endColumn":40},{"ruleId":"329","severity":1,"message":"336","line":85,"column":6,"nodeType":"331","endLine":85,"endColumn":8,"suggestions":"337"},{"ruleId":"325","severity":1,"message":"338","line":144,"column":11,"nodeType":"327","messageId":"328","endLine":144,"endColumn":17},{"ruleId":"329","severity":1,"message":"339","line":34,"column":6,"nodeType":"331","endLine":34,"endColumn":8,"suggestions":"340"},{"ruleId":"329","severity":1,"message":"341","line":31,"column":6,"nodeType":"331","endLine":31,"endColumn":8,"suggestions":"342"},{"ruleId":"329","severity":1,"message":"343","line":54,"column":6,"nodeType":"331","endLine":61,"endColumn":4,"suggestions":"344"},{"ruleId":"325","severity":1,"message":"345","line":3,"column":10,"nodeType":"327","messageId":"328","endLine":3,"endColumn":14},{"ruleId":"325","severity":1,"message":"346","line":9,"column":3,"nodeType":"327","messageId":"328","endLine":9,"endColumn":20},{"ruleId":"325","severity":1,"message":"347","line":18,"column":19,"nodeType":"327","messageId":"328","endLine":18,"endColumn":29},{"ruleId":"325","severity":1,"message":"345","line":2,"column":10,"nodeType":"327","messageId":"328","endLine":2,"endColumn":14},{"ruleId":"325","severity":1,"message":"348","line":5,"column":8,"nodeType":"327","messageId":"328","endLine":5,"endColumn":15},{"ruleId":"325","severity":1,"message":"349","line":17,"column":11,"nodeType":"327","messageId":"328","endLine":17,"endColumn":18},{"ruleId":"325","severity":1,"message":"350","line":17,"column":20,"nodeType":"327","messageId":"328","endLine":17,"endColumn":25},{"ruleId":"329","severity":1,"message":"351","line":26,"column":6,"nodeType":"331","endLine":26,"endColumn":8,"suggestions":"352"},{"ruleId":"325","severity":1,"message":"353","line":6,"column":3,"nodeType":"327","messageId":"328","endLine":6,"endColumn":9},{"ruleId":"325","severity":1,"message":"354","line":19,"column":3,"nodeType":"327","messageId":"328","endLine":19,"endColumn":31},{"ruleId":"329","severity":1,"message":"355","line":49,"column":6,"nodeType":"331","endLine":49,"endColumn":8,"suggestions":"356"},{"ruleId":"325","severity":1,"message":"357","line":1,"column":28,"nodeType":"327","messageId":"328","endLine":1,"endColumn":36},{"ruleId":"325","severity":1,"message":"358","line":2,"column":8,"nodeType":"327","messageId":"328","endLine":2,"endColumn":13},{"ruleId":"325","severity":1,"message":"359","line":3,"column":10,"nodeType":"327","messageId":"328","endLine":3,"endColumn":22},"no-native-reassign",["360"],"no-negated-in-lhs",["361"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["362"],"'UPDATE_PROFILE_RESET' is defined but never used.","'successCreateProfile' is assigned a value but never used.","'successUpdateProfile' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'profile', and 'userData'. Either include them or remove the dependency array.",["363"],"'config' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'orders', and 'userData'. Either include them or remove the dependency array.",["364"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userData'. Either include them or remove the dependency array.",["365"],"React Hook useEffect has missing dependencies: 'dispatch' and 'products'. Either include them or remove the dependency array.",["366"],"'Link' is defined but never used.","'createProductItem' is defined but never used.","'setMessage' is assigned a value but never used.","'Message' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'premiumId', and 'userData'. Either include them or remove the dependency array.",["367"],"'Button' is defined but never used.","'ADMIN_OUT_FOR_DELIVERY_RESET' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'successUpdate', 'user._id', 'user.email', 'user.firstName', 'user.isAdmin', 'user.isPremium', 'user.lastName', and 'userId'. Either include them or remove the dependency array.",["368"],"'useState' is defined but never used.","'axios' is defined but never used.","'PayPalButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},"Update the dependencies array to be: [history]",{"range":"383","text":"384"},"Update the dependencies array to be: [dispatch, history, profile, userData]",{"range":"385","text":"386"},"Update the dependencies array to be: [dispatch, orders, userData]",{"range":"387","text":"388"},"Update the dependencies array to be: [dispatch, userData]",{"range":"389","text":"390"},"Update the dependencies array to be: [userData, pageNumber, history, successCreate, successRemoveProduct, productCreated, dispatch, products]",{"range":"391","text":"392"},"Update the dependencies array to be: [dispatch, premiumId, userData]",{"range":"393","text":"394"},"Update the dependencies array to be: [dispatch, history, successUpdate, user._id, user.email, user.firstName, user.isAdmin, user.isPremium, user.lastName, userId]",{"range":"395","text":"396"},[432,434],"[history]",[3248,3250],"[dispatch, history, profile, userData]",[1201,1203],"[dispatch, orders, userData]",[1010,1012],"[dispatch, userData]",[1903,2023],"[userData, pageNumber, history, successCreate, successRemoveProduct, productCreated, dispatch, products]",[926,928],"[dispatch, premiumId, userData]",[1675,1677],"[dispatch, history, successUpdate, user._id, user.email, user.firstName, user.isAdmin, user.isPremium, user.lastName, userId]"]